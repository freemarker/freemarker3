<?xml version="1.0" encoding="iso-8859-1"?>
<project name="FreeMarker Site" default="site" basedir=".">

  <target name="init">
    <tstamp>
        <format property="timeStamp" pattern="yyyy-MM-dd HH:mm:ss z" timezone="GMT" />
    </tstamp>
    <!--[No update-jar]
    <available property="freemarker-src" file="../freemarker/build.xml"/>
    -->
  </target>

  <!--[No update-jar]
  <target name="update-jar" depends="init" if="freemarker-src">
    <ant dir="../freemarker" target="jar"/>
    <copy file="../freemarker/lib/freemarker.jar" toDir="lib"/>
  </target>
  -->
  
  <!--[No update-jar] <target name="loadTask" depends="update-jar"> -->
  <target name="loadTask" depends="init">
    <taskdef name="freemarker" classname="freemarker.ext.ant.FreemarkerXmlTask">
      <classpath>
        <pathelement location="lib/crimson.jar"/>
        <pathelement location="lib/freemarker.jar"/>
        <pathelement location="lib/jaxp.jar"/>
        <pathelement location="lib/jython.jar"/>
      </classpath>
    </taskdef>
  </target>
  
  <target name="create-site-dirs" depends="init">
    <mkdir dir="build/site/images"/>
  </target>

  <target name="webpages-xml" depends="loadTask">
    <freemarker
        basedir="src/webpages/pages-xml"
        destdir="build/site"
        includes="**/*.xml"
        template="src/webpages/site.ftl"
        projectfile="../site.xml"
        encoding="iso-8859-1"
        incremental="no">
      <!-- jython>
        # We could do something interesting in here if we wanted.
        print "The FreeMarker main module is available: ${freemarker-src}"     
      </jython -->
    </freemarker>
  </target>
  
  <target name="eclipse-toc-xml" depends="loadTask" if="site.offline">
    <!-- Build table of content for the Eclipse plugin -->
    <freemarker
        basedir="src/webpages"
        destdir="build/site/tmp"
        includes="site.xml"
        template="src/webpages/eclipse-toc.ftl"
        encoding="iso-8859-1"
        incremental="no">
    </freemarker>
    <!-- Rename the site.xml file into the toc.xml file and delete the site/tmp directory -->
    <move file="build/site/tmp/site.html" tofile="build/site/eclipse-site-toc.xml"/>
    <delete dir="build/site/tmp" />
  </target>

  <target name="webpages-literal" depends="create-site-dirs">
    <antcall target="webpages-literal-offline" />
    <antcall target="webpages-literal-online" />
  </target>

  <target name="webpages-literal-offline" depends="create-site-dirs" if="site.offline">
    <echo message="1" />
    <copy toDir="build/site">
      <fileset dir="src/webpages/pages-literal" excludes="download/library/**" />
    </copy>
  </target>
  
  <target name="webpages-literal-online" depends="create-site-dirs" unless="site.offline">
    <echo message="2" />
    <copy toDir="build/site">
      <fileset dir="src/webpages/pages-literal" />
    </copy>
  </target>
  
  <target name="site">
    <!-- Ensure that we have an empty build/site directory: -->
    <mkdir dir="build/site"/>
    <delete includeEmptyDirs="true">
      <fileset dir="build/site">
          <include name="*/**"/>
      </fileset>
    </delete>
    
    <!-- Generate the new content: -->
    <antcall target="webpages-xml" />
    <antcall target="webpages-literal" />
    <antcall target="eclipse-toc-xml" />
  </target>
  
  <target name="clean">
    <delete dir="build"/>
  </target>
  
  <target name="all" depends="clean, site"/>

  <target name="pack">
    <tar tarfile="build/site.tar" basedir="build/site"/>
    <gzip zipfile="build/site.tar.gz" src="build/site.tar"/>
    <delete file="build/site.tar"/>
  </target>

</project>