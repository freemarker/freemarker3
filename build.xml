<project name="freemarker" default="jar" basedir=".">

    <tstamp>
        <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>

    <target name="init">

	<uptodate property="parser.uptodate"
                 targetfile="src/freemarker/core/parser/FMParser.java">
	 <srcfiles dir="src/parser" includes="*.javacc"/>
	</uptodate>
	
	<path id="class.path">
      <fileset dir="libs">
          <include name="*.jar" />
          <exclude name="minimal-ant-classes.jar"/>
      </fileset>
    </path>
  </target>

  <target name="parser-gen" depends="init" unless="parser.uptodate">
        <!--get
            src="https://javacc.com/download/javacc.jar"
            dest="bootstrap"
            quiet="true"
            ignoreerrors="true"
            usetimestamp="true" />
        <get
            src="https://javacc.com/download/freemarker.jar"
            dest="bootstrap"
            quiet="true"
            ignoreerrors="true"
            usetimestamp="true" />
         <fail message="Bootstrap javacc.jar not available">
            <condition>
             <not>
              <available file="bootstrap/javacc.jar"/>
             </not>
            </condition>
         </fail>
         <fail message="Bootstrap freemarker.jar not available">
            <condition>
             <not>
              <available file="bootstrap/freemarker.jar"/>
             </not>
            </condition>
         </fail-->
  	<java jar="bootstrap/javacc.jar" fork="true">
        	<assertions><enable/></assertions>
 	   <arg value="src/parser/FM.javacc"/>
 	</java>
  </target>
  
  <target name="compile" depends="parser-gen">
  	<mkdir dir="build"/>
    <javac srcdir="src" 
 	       destdir="build"
 	       deprecation="off"
 	       debug="on"
 	       optimize="off"
           target="1.8"
           source="1.8"
    	   includeantruntime="true"
    	   nowarn="true"
    >
      <classpath refid="class.path"/>
    </javac>
  </target>
  
  <target name="jar" depends="compile">
     <jar jarfile="freemarker.jar" basedir="build" compress="true" excludes="freemarker/testcase/**">
        <manifest>
           <attribute name="Main-Class" value="freemarker.core.CommandLine"/>
           <attribute name="Built-By" value="${user.name}"/>
           <attribute name="Build-Date"   value="${timestamp}"/>
        </manifest>
     </jar>
  </target>
  
  
  <target name="clean">
     <delete file="src/freemarker/core/parser/FMParser.java"/>
     <delete file="src/freemarker/core/parser/FMLexer.java"/>
     <delete file="src/freemarker/core/parser/LexicalException.java"/>
     <delete file="src/freemarker/core/parser/SimpleCharStream.java"/>
     <delete file="src/freemarker/core/parser/InvalidToken.java"/>
     <delete file="src/freemarker/core/parser/Token.java"/>
     <delete file="src/freemarker/core/parser/FMConstants.java"/>
     <delete file="src/freemarker/core/parser/FMParser.html"/>
     <delete file="src/freemarker/core/parser/Node.java"/>
     <delete file="src/freemarker/core/parser/Nodes.java"/>
     <delete file="src/freemarker/core/parser/FileLineMap.java"/>
     <delete file="src/freemarker/core/parser/ParseException.java"/>
     <delete dir="build"/>
     <delete file="freemarker.jar"/>
  </target>

  <target name="test" depends="compile">
      <junit haltonfailure="off">
      <!--classpath>
          <dirset dir="src"/>
          <dirset dir="build"/>
          <path refid="class.path"/>
      </classpath-->
      <classpath>
          <pathelement location="libs/junit4.jar"/>
          <pathelement location="freemarker.jar"/>
          <dirset dir="src"/>
          <dirset dir="build"/>
      </classpath>
      <formatter type="plain" />
      <formatter type="xml" />
      <test
        name="freemarker.testcase.TemplateTestSuite"
        todir="build"
      />
    </junit>

  </target>
  
</project>
